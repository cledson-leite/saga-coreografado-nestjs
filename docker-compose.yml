version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - coreografado
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - coreografado
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - coreografado
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:19092

  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    networks:
      - coreografado

  sale-nestjs:
    image: sale
    build:
      context:  ./sale-service/
      dockerfile: Dockerfile
    ports:
      - '8081:8081'
    depends_on:
      - kafka
      - db
    networks:
      - coreografado

  inventory-nestjs:
    image: inventory
    build:
      context: ./inventory-service/
      dockerfile: Dockerfile
    ports:
      - '8082:8082'
    depends_on:
      - kafka
      - db
      - sale-nestjs
    networks:
      - coreografado

  payment-nestjs:
    image: payment
    build:
      context:  ./payment-service/
      dockerfile: Dockerfile
    ports:
      - '8083:8083'
    depends_on:
      - kafka
      - db
      - sale-nestjs
      - inventory-nestjs
    networks:
      - coreografado
  

networks: 
  coreografado:
    driver: bridge